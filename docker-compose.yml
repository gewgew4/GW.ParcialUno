version: '3.8'

services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - kafka
      - sqlserver
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - CONNECTION_STRING=Server=sqlserver;Database=PrintingSystem;User Id=sa;Password=YourStrong@Passw0rd;

  console-app:
    build:
      context: ./console-app
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - sqlserver
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - CONNECTION_STRING=Server=sqlserver;Database=PrintingSystem;User Id=sa;Password=YourStrong@Passw0rd;

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Passw0rd
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql

volumes:
  sqlserver_data: